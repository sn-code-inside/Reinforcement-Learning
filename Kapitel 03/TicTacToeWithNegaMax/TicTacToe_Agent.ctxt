#BlueJ class context
comment0.target=TicTacToe_Agent
comment0.text=\r\n\ Abstract\ class\ for\ an\ agent\ that\ is\ able\ to\ play\ tictactoe.\r\n\r\n\ Supplementary\ material\ to\ the\ book\:\ \r\n\ "Reinforcement\ Learning\ From\ Scratch\:\ Understanding\ Current\ Approaches\ -\ with\ Examples\ in\ Java\ and\ Greenfoot"\ by\ Uwe\ Lorenz.\r\n\ https\://link.springer.com/book/10.1007/978-3-031-09030-1\r\n\ \r\n\ Ausgabe\ auf\ Deutsch\:\ https\://link.springer.com/book/9783662683101\r\n\ \r\n\ Licensing\ CC-BY-SA\ 4.0\ \r\n\ Attribution\ -\ Sharing\ under\ the\ same\ conditions\r\n\ \r\n\ www.facebook.com/ReinforcementLearningJava\r\n\ github.com/sn-code-inside/Reinforcement-Learning\r\n\r\n\ www.x-ai.eu\r\n\ \r\n\ @author\ Uwe\ Lorenz\r\n\ @version\ 1.2\ (14.11.2023)\r\n
comment1.params=player\ env\ ident
comment1.target=TicTacToe_Agent(char,\ TicTacToe_Env,\ java.lang.String)
comment10.params=action\ player
comment10.target=double\ evaluateAction(int,\ char)
comment10.text=\r\n\ Evaluates\ an\ action\ in\ a\ state\ for\ one\ of\ the\ players\ based\ on\ the\ field\r\n\ state\ attribute\ (the\ 9\ TicTacToe\ fields,\ they\ are\ either\ '-','x'\ or\ 'o').\ \ \r\n\ At\ this\ level,\ a\ random\ choice\ is\ made\ between\ 0\ and\ 100.\r\n\ \r\n\ @param\ action\ Number\ of\ the\ field\ into\ which\ is\ set.\r\n\ @param\ player\ Symbol\ of\ the\ player\ ('x'\ or\ 'o')\r\n\ @return\ Evaluation\ of\ the\ action\ from\ the\ point\ of\ view\ of\ the\ specified\ player.\r\n
comment11.params=c
comment11.target=void\ setSymbol(char)
comment11.text=\r\n\ Sets\ the\ symbol\ of\ the\ agent\ (X\ or\ O).\r\n\ @param\ c\ Symbol\ of\ the\ player\ ('x'\ or\ 'o')\r\n
comment12.params=
comment12.target=java.lang.String\ getAlgIdent()
comment12.text=\r\n\ Returns\ the\ name\ of\ the\ algorithm\ used.\r\n\ @return\ Name\ of\ the\ algorithm.\r\n
comment2.params=player\ env\ ident\ initialState
comment2.target=TicTacToe_Agent(char,\ TicTacToe_Env,\ java.lang.String,\ char[])
comment3.params=board
comment3.target=java.util.ArrayList\ coursesOfAction(char[])
comment3.text=\r\n\ Produces\ the\ set\ of\ action\ possibilities\ A_s\ for\ a\ playing\ field\ state.\r\n\ @param\ board\ playing\ field\r\n\ @return\ List\ of\ action\ possibilities\ A_s\r\n
comment4.params=
comment4.target=java.lang.String\ getIdent()
comment4.text=\r\n\ Returns\ the\ name\ of\ the\ player\ (\=\ currently\ the\ algorithm\ ).\r\n\ @return\ The\ name\ of\ the\ player.\r\n
comment5.params=
comment5.target=char[]\ getState()
comment5.text=\r\n\ Gets\ the\ state\ the\ agent\ currently\ considers.\r\n\ @return\ State\ the\ agent\ currently\ considers.\r\n
comment6.params=state
comment6.target=void\ setState(char[])
comment6.text=\r\n\ Sets\ the\ current\ board\ state\ to\ the\ agent.\r\n
comment7.params=state\ player
comment7.target=double\ getReward(char[],\ char)
comment7.text=\r\n\ Checks,\ if\ the\ state\ of\ the\ board\ generates\ a\ reward\ for\ given\ player.\r\n\ @param\ state\ board\r\n\ @param\ player\ Player\ for\ which\ the\ state\ is\ checked.\r\n\ @return\ reward\r\n
comment8.params=state
comment8.target=int\ policy(char[])
comment8.text=\r\n\ GreedyPolicy\:\ \ Returns\ an\ action\ with\ the\ best\ rating\ for\ the\ given\ state.\r\n\ @param\ state\ Represents\ the\ state\ of\ the\ board.\r\n\ @return\ favorite\ action\r\n
comment9.params=state\ player
comment9.target=int\ policy(char[],\ char)
comment9.text=\r\n\ GreedyPolicy\:\ \ Returns\ an\ action\ with\ the\ best\ rating\ for\ the\ given\ state.\r\n\ @param\ state\ Represents\ the\ state\ of\ the\ board.\r\n\ @param\ player\ Symbol\ of\ the\ player\ for\ whom\ the\ calculation\ is\ to\ be\ made.\r\n\ @return\ favorite\ action\r\n
numComments=13
