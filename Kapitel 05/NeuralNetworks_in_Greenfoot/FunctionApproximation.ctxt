#BlueJ class context
comment0.target=FunctionApproximation
comment0.text=\r\n\ Environment\ for\ testing\ neural\ networks\ under\ Greenfoot.\ A\ multilayer\ perceptron\ \r\n\ is\ trained\ that\ approximates\ a\ financial\ market\ curve.\ \r\n\ The\ Neuroph\ library\ (http\://neuroph.sourceforge.net)\ is\ used\ for\ this\ purpose.\r\n\r\n\ Supplementary\ material\ to\ the\ book\:\ \r\n\ "Reinforcement\ Learning\ From\ Scratch\:\ Understanding\ Current\ Approaches\ -\ \r\n\ with\ Examples\ in\ Java\ and\ Greenfoot"\ by\ Uwe\ Lorenz.\r\n\ https\://link.springer.com/book/10.1007/978-3-031-09030-1\r\n\ \r\n\ Ausgabe\ auf\ Deutsch\:\ https\://link.springer.com/book/9783662683101\r\n\ \r\n\ Licensing\ CC-BY-SA\ 4.0\ \r\n\ Attribution\ -\ Sharing\ under\ the\ same\ conditions\r\n\ \r\n\ www.facebook.com/ReinforcementLearningJava\r\n\ github.com/sn-code-inside/Reinforcement-Learning\r\n\r\n\ www.x-ai.eu\r\n\ \r\n\ @author\ Uwe\ Lorenz\r\n\ @version\ 1.2\ (14.11.2023)\r\n
comment1.params=
comment1.target=FunctionApproximation()
comment10.params=wert\ min\ max
comment10.target=double\ bereich01(double,\ double,\ double)
comment11.params=wert01\ min\ max
comment11.target=double\ originalWert(double,\ double,\ double)
comment12.params=nnetFile\ testSet
comment12.target=void\ testNeuralNetwork(java.lang.String,\ org.neuroph.core.data.DataSet)
comment2.params=
comment2.target=void\ started()
comment3.params=
comment3.target=void\ initJfxLogger()
comment3.text=\r\n\ This\ initializes\ the\ data\ logger.\r\n
comment4.params=trainingDataFile\ validationDataFile
comment4.target=void\ train(java.lang.String,\ java.lang.String)
comment4.text=\r\n\ Trains\ the\ neural\ network.\r\n\ @param\ trainingDataFile\ file\ with\ the\ training\ data.\r\n\ @param\ validationDataFile\ file\ with\ the\ test\ data.\r\n
comment5.params=nnetFile\ testData
comment5.target=void\ loadANN(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Loads\ a\ network\ from\ file.\r\n\ @param\ nnetFile\ file\ of\ the\ neural\ network.\r\n\ @param\ testData\ Data\ for\ testing\ the\ network.\r\n
comment6.params=csvFilePath
comment6.target=org.neuroph.core.data.DataSet\ parseCSVLineByLine(java.lang.String)
comment7.params=event
comment7.target=void\ handleLearningEvent(org.neuroph.core.events.LearningEvent)
comment8.params=neuralNet\ testSet
comment8.target=void\ testNeuralNetwork(org.neuroph.core.NeuralNetwork,\ org.neuroph.core.data.DataSet)
comment9.params=wert\ min\ max
comment9.target=double\ bereich100(double,\ double,\ double)
numComments=13
