#BlueJ class context
comment0.target=Motors
comment0.text=\r\n\ Abstract\ class\ for\ robot\ components\ that\ receive\ motor\ outputs\ (see\ the\ kinematics\ method).\r\n\ \r\n\ Supplementary\ material\ to\ the\ book\:\ \r\n\ "Reinforcement\ Learning\ From\ Scratch\:\ Understanding\ Current\ Approaches\ -\ with\ Examples\ in\ Java\ and\ Greenfoot"\ by\ Uwe\ Lorenz.\r\n\ https\://link.springer.com/book/10.1007/978-3-031-09030-1\r\n\ \r\n\ Ausgabe\ auf\ Deutsch\:\ https\://link.springer.com/book/9783662683101\r\n\ \r\n\ Licensing\ CC-BY-SA\ 4.0\ \r\n\ Attribution\ -\ Sharing\ under\ the\ same\ conditions\r\n\ \r\n\ www.facebook.com/ReinforcementLearningJava\r\n\ github.com/sn-code-inside/Reinforcement-Learning\r\n\r\n\ www.x-ai.eu\r\n\ \r\n\ @author\ Uwe\ Lorenz\r\n\ @version\ 1.2\ (14.11.2023)\r\n
comment1.params=
comment1.target=Motors()
comment2.params=actor
comment2.target=void\ connectWith(SmoothMover)
comment3.params=
comment3.target=int\ getNumber()
comment3.text=\r\n\ Gives\ the\ number\ of\ the\ registered\ robot\ motors.\r\n
comment4.params=
comment4.target=java.lang.String[]\ getMotorNames()
comment5.params=m
comment5.target=Vector\ kinematics(double[])
comment5.text=\r\n\ Transforms\ motor\ values\ to\ movement\ vector.\r\n\ @param\ m\ values\ for\ the\ robot's\ motors.\r\n
numComments=6
