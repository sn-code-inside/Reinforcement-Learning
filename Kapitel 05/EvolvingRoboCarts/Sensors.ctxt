#BlueJ class context
comment0.target=Sensors
comment0.text=\r\n\ Abstract\ class\ for\ robot\ components\ that\ supply\ sensory\ input.\r\n\ \r\n\ Supplementary\ material\ to\ the\ book\:\ \r\n\ "Reinforcement\ Learning\ From\ Scratch\:\ Understanding\ Current\ Approaches\ -\ with\ Examples\ in\ Java\ and\ Greenfoot"\ by\ Uwe\ Lorenz.\r\n\ https\://link.springer.com/book/10.1007/978-3-031-09030-1\r\n\ \r\n\ Ausgabe\ auf\ Deutsch\:\ https\://link.springer.com/book/9783662683101\r\n\ \r\n\ Licensing\ CC-BY-SA\ 4.0\ \r\n\ Attribution\ -\ Sharing\ under\ the\ same\ conditions\r\n\ \r\n\ www.facebook.com/ReinforcementLearningJava\r\n\ github.com/sn-code-inside/Reinforcement-Learning\r\n\r\n\ www.x-ai.eu\r\n\ \r\n\ @author\ Uwe\ Lorenz\r\n\ @version\ 1.2\ (14.11.2023)\r\n
comment1.params=
comment1.target=Sensors()
comment10.params=x
comment10.target=int\ abs(int)
comment2.params=actor
comment2.target=void\ connectWith(SmoothMover)
comment3.params=
comment3.target=int\ getNumber()
comment3.text=\r\n\ Gives\ the\ number\ of\ the\ registered\ robot\ sensors.\r\n
comment4.params=
comment4.target=java.lang.String[]\ getSensorNames()
comment5.params=
comment5.target=void\ produceSensors()
comment6.params=
comment6.target=IntegerVec2D[]\ detectCollisions()
comment7.params=
comment7.target=IntegerVec2D[]\ detectDistances()
comment8.params=img\ p0\ p1\ RGB\ detectChange
comment8.target=IntegerVec2D\ sensorLine(java.awt.image.BufferedImage,\ IntegerVec2D,\ IntegerVec2D,\ int,\ boolean)
comment8.text=\r\n\ Checks\ if\ in\ the\ given\ bitmap\ a\ specific\ color\ (or\ color\ change)\ is\ present\ in\ the\ given\ line\ between\ points\ p0\ and\ p1\ (uses\ the\ Bresenham\ algorithm).\r\n\ @param\ img\ background\ image.\r\n\ @param\ p0\r\n\ @param\ p1\r\n\ @param\ RGB\r\n\ @param\ detectChange\r\n
comment9.params=x
comment9.target=int\ round(double)
numComments=11
