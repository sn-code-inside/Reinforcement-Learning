#BlueJ class context
comment0.target=MonteCarlo_Rollout
comment0.text=\r\n\ TicTacToe-Agent\ that\ valuates\ actions\ with\ a\ Monte-Carlo\ Rollout.\r\n\r\n\ Supplementary\ material\ to\ the\ book\:\ \r\n\ "Reinforcement\ Learning\ From\ Scratch\:\ Understanding\ Current\ Approaches\ -\ with\ Examples\ in\ Java\ and\ Greenfoot"\ by\ Uwe\ Lorenz.\r\n\ https\://link.springer.com/book/10.1007/978-3-031-09030-1\r\n\ \r\n\ Ausgabe\ auf\ Deutsch\:\ https\://link.springer.com/book/9783662683101\r\n\ \r\n\ Licensing\ CC-BY-SA\ 4.0\ \r\n\ Attribution\ -\ Sharing\ under\ the\ same\ conditions\r\n\ \r\n\ www.facebook.com/ReinforcementLearningJava\r\n\ github.com/sn-code-inside/Reinforcement-Learning\r\n\r\n\ www.x-ai.eu\r\n\ \r\n\ @author\ Uwe\ Lorenz\r\n\ @version\ 1.2\ (14.11.2023)\r\n
comment1.params=player\ env\ ident
comment1.target=MonteCarlo_Rollout(char,\ TicTacToe_Env,\ java.lang.String)
comment2.params=action\ player
comment2.target=double\ evaluateAction(int,\ char)
comment2.text=\r\n\ Evaluates\ an\ action\ in\ a\ state\ for\ one\ of\ the\ players\ based\ on\ the\ field\ state\ attribute\r\n\ (the\ 9\ TicTacToe\ fields,\ they\ are\ either\ '-','x'\ or\ 'o').\ The\ average\ result\ of\ the\r\n\ MonteCarlo-rollouts\ is\ used\ for\ this.\ The\ agent\ uses\ the\ greedy\ policy\ of\ the\ superclass.\r\n\ \r\n\ @param\ action\ Number\ of\ the\ field\ to\ be\ set\r\n\ @param\ player\ the\ player's\ sign\ ('x'\ oder\ 'o')\r\n\ @return\ Evaluation\ of\ the\ action\ from\ the\ point\ of\ view\ of\ the\ specified\ player\r\n
comment3.params=action\ player
comment3.target=double\ rollout_evaluation(int,\ char)
comment3.text=\r\n\ Runs\ a\ random\ game\ based\ on\ the\ given\ field\ state.\ Returns\ only\ the\ result.\r\n\ \r\n\ @param\ action\ Number\ of\ the\ field\ into\ which\ is\ set.\r\n\ @param\ player\ the\ character\ of\ the\ active\ player\ ('x'\ or\ 'o')\r\n\ @return\ Evaluation\ of\ the\ action\ from\ the\ point\ of\ view\ of\ the\ specified\ player.\r\n
comment4.params=n
comment4.target=void\ setMaxRollouts(int)
comment4.text=\r\n\ Sets\ the\ number\ of\ rollouts\ to\ be\ performed\ in\ each\ case.\r\n\ @param\ n\ Sample\ size\ of\ MC\ rollout\ evaluation.\r\n
comment5.params=
comment5.target=int\ getMaxRollouts()
comment5.text=\r\n\ Returns\ the\ number\ of\ rollouts\ to\ be\ performed\ in\ each\ case.\r\n\ @return\ n\ \ Sample\ size\ of\ MC\ rollout\ evaluation.\r\n
numComments=6
