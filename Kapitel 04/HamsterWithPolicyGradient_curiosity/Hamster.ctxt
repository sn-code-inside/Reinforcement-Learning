#BlueJ class context
comment0.target=Hamster
comment0.text=\r\n\ Representation\ of\ object-oriented\ hamsters\ in\ the\ java\ hamster\ model.\r\n\ \r\n\ @author\ Dietrich\ Boles\ (\ University\ of\ Oldenburg,\ https\://uol.de/en/dietrich-boles\ ;April,2021\ )\r\n\ @version\ 2.0\ (07.06.2008)\r\n
comment1.params=
comment1.target=Hamster()
comment1.text=\r\n\ Constructor\ to\ create\ a\ new\ hamster\ with\ facing\ EAST\ and\ no\ grain\ in\ the\ mouth.\r\n
comment10.params=
comment10.target=void\ give()
comment10.text=\r\n\ The\ called\ hamster\ places\ a\ grain\ on\ the\ tile\ it\ is\ currently\ on.\r\n\ \r\n\ @throws\ MaulLeerException\ is\ thrown\ when\ the\ hamster\ has\ no\ grains\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ in\ its\ jaws\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \r\n
comment11.params=
comment11.target=int\ getRow()
comment11.text=\r\n\ returns\ the\ row\ of\ the\ tile\ of\ the\ territory\ on\ which\ the\ called\ hamster\ is\ currently\ located.\r\n\ \r\n\ @return\ row\ of\ the\ tile\ of\ the\ territory\ on\ which\ the\ called\ hamster\ is\ currently\ located.\r\n
comment12.params=
comment12.target=int\ getColumn()
comment12.text=\r\n\ returns\ the\ column\ of\ the\ tile\ of\ the\ territory\ on\ which\ the\ called\ hamster\ is\ currently\ located.\r\n\ \r\n\ @return\ column\ of\ the\ tile\ of\ the\ territory\ on\ which\ the\ called\ hamster\ is\ currently\ located.\r\n
comment13.params=
comment13.target=int\ getDirectionOfView()
comment13.text=\r\n\ returns\ the\ direction\ in\ which\ the\ called\ hamster\ is\ currently\ looking\ (the\ values\ returned\ \r\n\ correspond\ to\ the\ constants\ above)\r\n\ \r\n\ @return\ direction\ in\ which\ the\ called\ hamster\ is\ currently\ looking\ \r\n
comment14.params=
comment14.target=int\ getGrainsInJaws()
comment14.text=\r\n\ returns\ the\ number\ of\ grains\ that\ the\ called\ hamster\ currently\ has\ in\ its\ mouth\r\n\ \r\n\ @return\ number\ of\ grains\ that\ the\ called\ hamster\ currently\ has\ in\ its\ mouth\r\n
comment15.params=
comment15.target=int\ getNumberOfHamsters()
comment15.text=\r\n\ returns\ the\ total\ number\ of\ existing\ hamsters\ in\ the\ territory\r\n\ \r\n\ @return\ the\ total\ number\ of\ existing\ hamsters\ in\ the\ territory\r\n
comment16.params=h
comment16.target=Hamster(Hamster)
comment17.params=richtung
comment17.target=void\ setDirectionOfView(int)
comment17.text=\r\n\ Sets\ the\ direction\ of\ view.\r\n\ @param\ richtung\ direction\ of\ view\r\n
comment18.params=world
comment18.target=void\ addedToWorld(greenfoot.World)
comment18.text=\r\n\ Is\ called\ when\ the\ hamster\ is\ placed\ in\ the\ territory.\r\n\ @param\ world\ environment\ of\ the\ hamster\ (greenfoot\ gridworld)\r\n
comment19.params=x\ y
comment19.target=void\ setLocation(int,\ int)
comment19.text=\r\n\ Do\ only\ if\ there\ is\ no\ wall\ on\ the\ tile.\r\n
comment2.params=direction\ numberOfGrains
comment2.target=Hamster(int,\ int)
comment2.text=\r\n\ Constructor\ to\ create\ a\ new\ hamster\ with\ the\ specified\ \r\n\ direction\ of\ view\ and\ number\ of\ nuclei\ in\ the\ mouth\r\n\r\n\ @param\ direction\r\n\ \ \ \ \ \ \ \ \ \ \ \ direction\ of\ view\ of\ the\ hamster\r\n\ @param\ numberOfGrains\r\n\ \ \ \ \ \ \ \ \ \ \ \ number\ of\ grains\ in\ the\ jaws\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ do\ something\r\n
comment4.params=
comment4.target=boolean\ isFrontFree()
comment4.text=\r\n\ returns\ true\ if\ there\ is\ no\ wall\ in\ front\ of\ the\ called\ hamster\ in\ the\ \r\n\ direction\ of\ view\ \r\n\ (if\ the\ hamster\ is\ at\ the\ edge\ of\ the\ territory\ in\ the\ direction\ of\ view,\ \r\n\ false\ is\ returned)\r\n\ \r\n\ @return\ true,\ if\ there\ is\ no\ wall\ in\ front\ of\ the\ called\ hamster\ (direction\ of\ view);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise\ false\r\n
comment5.params=
comment5.target=boolean\ isGrainThere()
comment5.text=\r\n\ Returns\ true,\ if\ there\ is\ at\ least\ one\ grain\ on\ the\ tile\ on\ which\ \r\n\ the\ called\ hamster\ is\ currently\ located.\r\n\ \r\n\ @return\ true,\ if\ there\ is\ at\ least\ one\ grain\ on\ the\ tile\ on\ which\ \r\n\ the\ called\ hamster\ is\ currently\ located,\ false\ otherwise\r\n
comment6.params=
comment6.target=boolean\ jawsEmpty()
comment6.text=\r\n\ returns\ true\ if\ the\ called\ hamster\ has\ no\ grains\ in\ its\ jaws.\r\n\ \r\n\ @return\ true,\ if\ the\ called\ hamster\ has\ no\ grains\ in\ its\ jaws,\r\n\ \ \ \ \ \ \ \ \ false\ otherwise\r\n
comment7.params=
comment7.target=void\ goAhead()
comment7.text=\r\n\ \ The\ called\ hamster\ hops\ onto\ the\ tile\ in\ front\ of\ it\ in\ the\ direction\ of\ view.\r\n\ \r\n\ @throws\ MauerDaException\ is\ thrown\ if\ the\ tile\ in\ the\ direction\ of\ view\ in\ \r\n\ front\ of\ the\ hamster\ is\ blocked\ by\ a\ wall\ or\ the\ hamster\ in\ the\ direction\ of\r\n\ view\ is\ at\ the\ edge\ of\ the\ territory.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \r\n
comment8.params=
comment8.target=void\ turnLeft()
comment8.text=\r\n\ The\ called\ hamster\ turns\ left.\r\n
comment9.params=
comment9.target=void\ take()
comment9.text=\r\n\ The\ called\ hamster\ grabs\ a\ grain\ on\ the\ tile\ it\ is\ currently\ on.\r\n\ \r\n\ @throws\ KachelLeerException\ is\ thrown\ if\ there\ is\ no\ grain\ on\ \r\n\ \ \ \ \ \ \ \ \ \ the\ tile\ on\ which\ the\ hamster\ is\ currently\ located\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \r\n
numComments=20
