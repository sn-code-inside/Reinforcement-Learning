#BlueJ class context
comment0.target=RL_GridEnv_FV
comment0.text=\r\n\ RL_GridEnv\ "hamster-model"\ gridworld\ environment\ for\ testing\ reinforcement\ learning\ algorithms.\ \r\n\ \r\n\ Supplementary\ material\ to\ the\ book\:\ \r\n\ "Reinforcement\ Learning\ From\ Scratch\:\ Understanding\ Current\ Approaches\ -\ with\ Examples\ in\ Java\ and\ Greenfoot"\ by\ Uwe\ Lorenz.\r\n\ https\://link.springer.com/book/10.1007/978-3-031-09030-1\r\n\ \r\n\ Ausgabe\ auf\ Deutsch\:\ https\://link.springer.com/book/9783662683101\r\n\ \r\n\ Licensing\ CC-BY-SA\ 4.0\ \r\n\ Attribution\ -\ Sharing\ under\ the\ same\ conditions\r\n\ \r\n\ www.facebook.com/ReinforcementLearningJava\r\n\ github.com/sn-code-inside/Reinforcement-Learning\r\n\r\n\ www.x-ai.eu\r\n\ \r\n\ @author\ Uwe\ Lorenz\r\n\ @version\ 1.2\ (14.11.2023)\r\n
comment1.params=fieldDescription
comment1.target=RL_GridEnv_FV(java.lang.String[])
comment1.text=\r\n\ Constructor\ for\ a\ grid\ world\ territory.\r\n\ @param\ fielddescription\ map\ of\ the\ arena\r\n
comment10.params=x\ y
comment10.target=char\ getMapElementAt(int,\ int)
comment10.text=\r\n\ Uses\ map\ array\ to\ identify\ elements\ of\ the,\ no\ moveable\ actors\ can\ be\ recognized\ (critical\ for\ execution\ speed).\r\n\ @param\ x\ column\r\n\ @param\ y\ row\r\n\ @return\ character\ that\ describes\ the\ specified\ tile\r\n
comment11.params=
comment11.target=void\ depositStateValueObjects()
comment11.text=\r\n\ Storing\ a\ Actor\ object\ for\ displaying\ state\ values\ on\ all\ fields\ where\ there\ is\ no\ wall.\r\n
comment12.params=field
comment12.target=void\ arenaSetup(java.lang.String[])
comment12.text=\r\n\ Produces\ the\ elements\ of\ the\ agentsn\ environment\ according\ to\ the\ field\ description\ string.\r\n\ @param\ field\r\n
comment13.params=
comment13.target=int\ getHamsterStartX()
comment13.text=\r\n\ \ Returns\ the\ X\ start\ position\ of\ the\ hamster\ agent.\r\n
comment14.params=
comment14.target=int\ getHamsterStartY()
comment14.text=\r\n\ Returns\ the\ Y\ start\ position\ of\ the\ hamster\ agent.\r\n
comment15.params=x\ y
comment15.target=void\ setHamsterStart(int,\ int)
comment15.text=\r\n\ Defines\ the\ start\ position.\r\n\ @param\ x\ column\ in\ the\ gridworld\r\n\ @param\ y\ row\ in\ the\ gridworld\r\n
comment2.params=
comment2.target=int\ getSizeOfActionspace()
comment2.text=\r\n\ Size\ of\ the\ action\ space\r\n\ @return\ Theoretical\ number\ of\ all\ possible\ actions\ (independent\ of\ state)\r\n
comment3.params=
comment3.target=boolean\ isIterationFinished()
comment3.text=\r\n\ Returns\ the\ state\ of\ the\ "iteration\ finished"\ flag.\r\n\ @return\ state\ of\ the\ "iteration\ finished"\ flag.\r\n
comment4.params=s_key
comment4.target=double\ getReward(java.lang.String)
comment4.text=\r\n\ Returns\ reward\ for\ the\ given\ state.\r\n\ @param\ s_key\ state\ key\r\n\ @return\ reward\ for\ state\ s\r\n
comment5.params=x\ y
comment5.target=double\ getReward(int,\ int)
comment5.text=\r\n\ Returns\ reward\ for\ the\ specified\ position\ in\ the\ grid.\r\n\ @param\ x\ column\ in\ the\ gridworld\r\n\ @param\ y\ row\ in\ the\ gridworld\r\n\ @return\ reward\ at\ the\ specified\ position\ in\ the\ grid.\r\n
comment6.params=s_key
comment6.target=boolean\ isTerminal(java.lang.String)
comment6.text=\r\n\ Tests\ if\ a\ state\ is\ terminal.\r\n\ @param\ s_key\ state\ key\r\n\ @return\ true\ if\ a\ state\ is\ terminal.\r\n
comment7.params=x\ y
comment7.target=boolean\ isTerminal(int,\ int)
comment7.text=\r\n\ Tests\ (and\ defines)\ whether\ a\ state\ is\ terminal.\r\n\ @param\ x\ column\ in\ the\ gridworld\r\n\ @param\ y\ row\ in\ the\ gridworld\r\n\ @return\ true\ if\ a\ state\ is\ terminal.\r\n
comment8.params=
comment8.target=java.util.ArrayList\ coursesOfAction()
comment8.text=\r\n\ Returns\ a\ list\ of\ possible\ actions\ for\ the\ agent.\r\n\ @return\ a\ list\ of\ possible\ actions.\r\n
comment9.params=x\ y
comment9.target=boolean\ isStatePossible(int,\ int)
comment9.text=\r\n\ Tests\ if\ there\ is\ a\ wall\ on\ the\ field\ or\ if\ it\ is\ "out\ of\ the\ world".\r\n\ @param\ x\ column\r\n\ @param\ y\ row\r\n\ @return\ false\ if\ there\ is\ a\ wall\ on\ the\ field\ or\ if\ it\ is\ "out\ of\ the\ world",\ true\ otherwise.\r\n
numComments=16
