#BlueJ class context
comment0.target=A3C_Hamster
comment0.text=\r\n\ A3C\ hamster\r\n\ \r\n\ Supplementary\ material\ to\ the\ book\:\ \r\n\ "Reinforcement\ Learning\ From\ Scratch\:\ Understanding\ Current\ Approaches\ -\ with\ Examples\ in\ Java\ and\ Greenfoot"\ by\ Uwe\ Lorenz.\r\n\ https\://link.springer.com/book/10.1007/978-3-031-09030-1\r\n\ \r\n\ Ausgabe\ auf\ Deutsch\:\ https\://link.springer.com/book/9783662683101\r\n\ \r\n\ Licensing\ CC-BY-SA\ 4.0\ \r\n\ Attribution\ -\ Sharing\ under\ the\ same\ conditions\r\n\ \r\n\ www.facebook.com/ReinforcementLearningJava\r\n\ github.com/sn-code-inside/Reinforcement-Learning\r\n\r\n\ www.x-ai.eu\r\n\ \r\n\ @author\ Uwe\ Lorenz\r\n\ @version\ 1.2\ (14.11.2023)\r\n
comment1.params=
comment1.target=void\ stopWorker()
comment10.params=nstep_sequence\ s\ episodeEnd
comment10.target=void\ update(java.util.LinkedList,\ java.lang.String,\ boolean)
comment10.text=\r\n\ Asynchronous\ n-step\ update.\ Affects\ only\ the\ "delta-lists".\r\n\ @param\ nstep_sequence\ nstep\ foreward\ sequence\r\n\ @param\ s\ last\ reached\ state\r\n\ @param\ terminal\ episode\ end\ reached?\r\n
comment11.params=x\ y\ score
comment11.target=java.lang.String\ getStateKey(int,\ int,\ int)
comment11.text=\r\n\ Creates\ the\ key\ for\ accessing\ the\ table\ for\ V(s)\ an\ theta(s)\ .\ If\ it\ does\ not\ exist,\ the\ corresponding\ record\ is\ created.\r\n\ @param\ x\ column\ in\ the\ gridworld\r\n\ @param\ y\ row\ in\ the\ gridworld\r\n\ @param\ score\ collected\ grains\r\n\ @return\ state\ key\r\n
comment12.params=s_key
comment12.target=double[]\ P_Policy(java.lang.String)
comment12.text=\r\n\ Stochastic\ policy\ of\ the\ agent.\ Assigns\ a\ probability\ distribution\ to\ a\ state\ over\ the\ set\ of\ possible\ actions.\r\n\ @param\ s_key\ state\ key\r\n\ @return\ probability\ distribution\ for\ actions\ a\ in\ [0,1,...,n-1].\r\n
comment13.params=n\ A_s\ s
comment13.target=double[]\ P_SoftMax(int,\ java.util.List,\ java.lang.String)
comment13.text=\r\n\ Assigns\ a\ probability\ distribution\ to\ a\ state\ over\ the\ set\ of\ possible\ actions\r\n\ according\ to\ softmax\ action\ selection\ strategy.\r\n\ @param\ n\ number\ of\ sucessor\ states\r\n\ @param\ A_s\ List\ of\ action\ options\ available\ to\ the\ agent\ at\ the\ given\ time\ in\ s.\r\n\ @param\ s_key\ key\ for\ given\ state\ s\r\n\ @return\ probability\ distribution\ for\ actions\ a\ in\ [0,1,...,n-1].\r\n
comment14.params=
comment14.target=void\ startNewEpisode()
comment15.params=
comment15.target=void\ updateGlobalTheta()
comment16.params=
comment16.target=void\ updateGlobalV()
comment17.params=
comment17.target=int\ getID()
comment17.text=\r\n\ Returns\ the\ ID\ of\ this\ agent.\r\n
comment18.params=s
comment18.target=java.lang.Double\ getV(java.lang.String)
comment19.params=s_key
comment19.target=double[]\ getTheta(java.lang.String)
comment2.params=
comment2.target=A3C_Hamster()
comment3.params=world
comment3.target=void\ addedToWorld(greenfoot.World)
comment4.params=s
comment4.target=int\ getN_global(java.lang.String)
comment4.text=\r\n\ Gets\ the\ shared\ visit\ counter\ status\ at\ the\ state\ s.\r\n\ @param\ s\ state\ key\r\n\ @return\ counter\ status\ at\ state\ s.\r\n
comment5.params=s
comment5.target=int\ incN_global(java.lang.String)
comment5.text=\r\n\ Increases\ shared\ visit\ counter\ at\ state\ s.\ N_global(s)\ \:\=\ N_global(s)+1\r\n\ @param\ s\ state\ key\r\n\ @return\ new\ counter\ status\ at\ state\ s.\r\n
comment6.params=
comment6.target=int\ getNextID()
comment6.text=\ \r\n\ Returns\ a\ new\ ID\ number\ for\ the\ created\ agent.\r\n
comment7.params=
comment7.target=void\ act()
comment8.params=
comment8.target=void\ run()
comment9.params=
comment9.target=void\ act_task()
numComments=20
