#BlueJ class context
comment0.target=Evolving_Hamster
comment0.text=\r\n\ Hamster\ agent\ that\ adapts\ with\ an\ evolutionary\ strategy.\r\n\r\n\ Supplementary\ material\ to\ the\ book\:\ \r\n\ "Reinforcement\ Learning\ From\ Scratch\:\ Understanding\ Current\ Approaches\ -\ with\ Examples\ in\ Java\ and\ Greenfoot"\ by\ Uwe\ Lorenz.\r\n\ https\://link.springer.com/book/10.1007/978-3-031-09030-1\r\n\ \r\n\ Ausgabe\ auf\ Deutsch\:\ https\://link.springer.com/book/9783662683101\r\n\ \r\n\ Licensing\ CC-BY-SA\ 4.0\ \r\n\ Attribution\ -\ Sharing\ under\ the\ same\ conditions\r\n\ \r\n\ www.facebook.com/ReinforcementLearningJava\r\n\ github.com/sn-code-inside/Reinforcement-Learning\r\n\r\n\ www.x-ai.eu\r\n\ \r\n\ @author\ Uwe\ Lorenz\r\n\ @version\ 1.2\ (14.11.2023)\r\n
comment1.params=world
comment1.target=void\ addedToWorld(greenfoot.World)
comment10.params=s_key
comment10.target=double[]\ getTheta(java.lang.String)
comment10.text=\ \r\n\ Get\ action\ preferences\ for\ a\ given\ state.\r\n\ @param\ s_key\ state\ key\r\n\ @return\ parameters\ for\ action\ preferences\r\n
comment11.params=s_key\ a
comment11.target=double\ getTheta_A(java.lang.String,\ int)
comment11.text=\ \r\n\ Get\ preferences\ for\ given\ state\ and\ action.\r\n\ @param\ s_key\ state\ key\r\n\ @param\ a\ action\r\n\ @return\ parameter\ describing\ the\ action\ preference.\r\n
comment12.params=
comment12.target=Genome\ updateGenome()
comment12.text=\r\n\ Produces\ a\ genome\ from\ current\ policy\ table\ (thetas).\r\n
comment13.params=genome
comment13.target=producePolicyParameter(Genome)
comment13.text=\r\n\ Produces\ a\ policy\ table\ from\ a\ given\ genome.\r\n\ @param\ genome\ A\ genome\ that\ contains\ a\ corresponding\ policy\ table.\r\n
comment14.params=env\ s_key\ sigma
comment14.target=double[]\ produceRandomGen(Evolutionary_PolicySearch_Environment,\ java.lang.String,\ double)
comment14.text=\r\n\ Produce\ a\ new\ random\ gene\ (action\ preferences\ theta\ for\ one\ state).\r\n\ @param\ env\ environment\ for\ getting\ information\ about\ the\ action\ space.\r\n\ @param\ s_key\ state\ key\r\n\ @param\ sigma\ standard\ deviation\ for\ producing\ the\ new\ random\ gene.\r\n\ @return\ action\ preferences\ theta\ for\ one\ state,\ what\ a\ "gene"\ is\ in\ this\ setting.\r\n
comment2.params=nr\ genome
comment2.target=Evolving_Hamster(int,\ Genome)
comment3.params=
comment3.target=void\ startNewEpisode()
comment3.text=\r\n\ A\ new\ episode\ is\ started,\ i.e.\ counter\ reset\ and\ agent\ to\ start\ position\r\n\ Perform\ an\ evaluation\ period\ if\ necessary.\r\n
comment4.params=
comment4.target=void\ act()
comment5.params=s_key
comment5.target=double[]\ P_Policy(java.lang.String)
comment5.text=\r\n\ Stochastic\ policy\ of\ the\ agent.\ Assigns\ a\ probability\ distribution\ to\ a\ state\ over\ the\ set\ of\ possible\ actions.\r\n\ @param\ s_key\ state\ key\r\n\ @return\ probability\ distribution\ for\ actions\ a\ in\ [0,1,...,n-1].\r\n
comment6.params=n\ A_s\ s
comment6.target=double[]\ P_SoftMax(int,\ java.util.List,\ java.lang.String)
comment6.text=\r\n\ SoftMax\ policy\ of\ the\ agent.\ Assigns\ a\ probability\ distribution\ to\ a\ state\ over\ the\ set\ of\ possible\ actions\r\n\ according\ to\ SoftMax-action\ selection\ strategy.\r\n\ @param\ n\ number\ of\ sucessor\ states\r\n\ @param\ A_s\ List\ of\ action\ options\ available\ to\ the\ agent\ at\ the\ given\ time\ in\ s.\r\n\ @param\ s_key\ key\ for\ given\ state\ s\r\n\ @return\ probability\ distribution\ for\ actions\ a\ in\ [0,1,...,n-1].\r\n
comment7.params=n\ A_s\ theta\ s
comment7.target=double[]\ P_SoftMax(int,\ java.util.List,\ double[],\ java.lang.String)
comment7.text=\r\n\ SoftMax\ policy\ of\ the\ agent.\ Assigns\ a\ probability\ distribution\ to\ a\ state\ over\r\n\ the\ set\ of\ possible\ actions\ according\ to\ SoftMax-action\ selection\ strategy\ with\ \r\n\ the\ given\ parameter\ array.\r\n\ @param\ n\ number\ of\ sucessor\ states\r\n\ @param\ A_s\ List\ of\ possible\ actions\ available\ to\ the\ agent\ at\ the\ given\ time\ in\ s.\ The\ probability\ of\ impossible\r\n\ \ \ \ \ \ \ \ \ \ \ \ actions\ should\ be\ 0,\ but\ that\ would\ mean\ an\ infinite\ value\ of\ theta.\ That\ is\ why\ this\ list\ is\ necessary.\r\n\ @param\ theta\ parameters\ for\ calculating\ the\ probability\ distribution\r\n\ @param\ s_key\ key\ for\ given\ state\ s\r\n\ @return\ probability\ distribution\ for\ actions\ a\ in\ [0,1,...,n-1].\r\n
comment8.params=x\ y\ koerner
comment8.target=java.lang.String\ getStateKey(int,\ int,\ int)
comment9.params=s_key\ theta
comment9.target=void\ setTheta(java.lang.String,\ double[])
comment9.text=\ \r\n\ Set\ action\ preferences\ for\ a\ given\ state.\r\n\ @param\ s_key\ state\ key\r\n\ @param\ theta\ parameters\ for\ action\ preferences\r\n
numComments=15
